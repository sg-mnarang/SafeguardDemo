# This is a basic workflow to help you get started with Actions

name: CI

on:
  # Triggers the workflow on push or pull request events but only for the master branch
  pull_request:
    branches: [ Development ]
    types: [ closed ]



  # Allows you to run this workflow manually from the Actions tab
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    
      
       
 
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      
      - id: file_changes
        uses: trilom/file-changes-action@v1.2.3
        with:
         output: ' '
      - name: list
        run: |
          echo '${{ steps.file_changes.outputs.files}}'
    
      - name: check
        env:
           Experience: ${{contains(steps.file_changes.outputs.files, 'exp')}}
           Process: ${{contains(steps.file_changes.outputs.files, 'prc')}}
           System: ${{contains(steps.file_changes.outputs.files, 'sys')}}
        run: |
         echo " Change in Experience API $Experience"
         echo " Change in Process API $Process"
         echo " Change in Process API $System"
      
      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!
        
      - name: Build Server
        working-directory: ./mule-4-exp-api
        run: |
         mvn -B package --file pom.xml
         artifactName1=$(ls target/*.jar | head -1)
         commitHash=$(git rev-parse --short "$GITHUB_SHA")
         artifactName2=$(ls target/*.jar | head -1 | sed "s/.jar/.$commitHash.jar/g")
         mv $artifactName1 $artifactName2
         echo "Hellooooooooooooooooooooooooooooooooooooooooooooooooooooo"
      - uses: actions/upload-artifact@v2
        with:
          name: artifacts
          working-directory: ./mule-4-exp-api
          path: target/*.jar
     

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:    
    - uses: actions/checkout@v2
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - uses: actions/download-artifact@master
      with:
        name: artifacts
    - name: Deploy to CloudHub
      env:
        USERNAME: ${{ secrets.username }}
        PASSWORD: ${{ secrets.password }}
      run: |
        artifactName=$(ls *.jar | head -1)
        mvn mule:deploy -Dmule.artifact=$artifactName -Danypoint.userName="$USERNAME" -Danypoint.password="$PASSWORD"
